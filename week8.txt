1.Linked list
- เป็นโครงสร้างข้อมูลที่ออกแบบมาใช้เก็บข้อมูล
- array เป็นโครงสร้างข้อมูลที่มีลักษณะที่ข้อมูลแต่ละตัวอยู่เรียงต่อกัน แต่ทั้ง array และ linked list มีโครงสร้างและการจัดการในการจัดเก็บข้อมูล

2.เกริ่นนำเกี่ยวกับ Structure
- Structure เป็นการกำหนดรูปแบบหรือโครงสร้างข้อมูลที่มีการรวบรวมตัวแปรที่เก็บข้อมูลหลายเรื่องที่สัมพันธ์กัน ที่อาจมีประเภทข้อมูลที่แตกต่าง
2.1)การประกาศตัวแปรที่มีโครงสร้าง Structure 
    struct student std;
- การเข้าถึงแต่สมาชิกแต่ละฟิลด์ของ Structure สามารถทำได้โดยใช้ dot operater คือใช้เครื่องหมาย .
2.2)การประกาศตัวแปรพร้อมกำหนดค่าเริ่มต้นให้กับตัวแปรประเภท Structure
- เราประกาศพร้อมกำหนดค่าเริ่มต้นให้กับตัวแปรที่มีโครงร้าง Structure 
    struct student another_std = {"1111", "XXXX", 18};
2.3)ตัวแปร pointer ไปยัง Structure
- การเข้าถึงสมาชิกแต่ละฟิลด์ผ่านตัวแปร pointer 
2.4)การใช้ tepedef
- สามารถกำหนดประเภทข้อมูลขึ้นมาเพิ่มเติมผ่านการใช้คีย์เวิร์ด tepedef ได้
2.5)Self - Referential Structure
- struct ถูกเรียกว่า Self-Referential Structure ก็คือ struct ที่อ้างกลับไปยังโครงสร้างตนเอง
- เรามักจะใช้คำว่า "node" ในการอ้างถึงหน่วยหรือโหนดที่ออกแบบมาเพื่อเก็บข้อมูล 1 หน่วย

3.การเข้าถึงข้อมูลแต่ละตัวใน linked list (Traversal)
- เราจะปรับโค้ดก่อนหน้าโดยให้มีฟังกืชันที่ใช้สร้าง linked list ที่มี 3 โหนด

4.การลบข้อมูลออกจาก linked list (Deletion)
- หากเราต้องการลบข้อมูลออกไปจาก list เราจะต้องจัดการกับ linked list 
- เราจะต้องเขียนฟังก์ชันเพื่อใช้ลบข้อมูลที่ต้องการออกไปจาก list

5.การเพิ่มข้อมูลไปใน linked list (lnsertion)
- สามารถทำได้หลายลักษณะ จากตำแหน่งใน list ที่ต้องการเพิ่มโหนดเข้าไป

6.Doubly linked list
- ลักษณะของ linked list ที่เห็นผ่านมาเรียกว่า Singly linked list โดยได้จากการที่แต่ละโหนดที่อยู่ติดกับตัวเชื่อมต่อถึงกันผ่านลิงก์เพียงลิงก์เดียว
- ลิงก์อันนึงใช้เชื่อมต่อไปยังโหนดถัดไป และลิงก์อีกอันนึงใช้เชื่อมต่อไปยังโหนดก่อนหน้า