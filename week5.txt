1.ขอบเขตและช่วยชีวิตของตัวแปร(Scope Rules)
- บางบวิเวณของโปรแกรม ตัวแปรที่กำหนดขึ้นในบริเวณอาจจะถูกเข้าถึงได้ และเมื่อออกจากบริเวณดังกล่าว ตัวแปรนั้นอาจไม่ถูกเข้าถึงได้อีก
1.1)Local Variables
- ตัวแปรที่ประกาศไว้ใน block, ในตัวฟังก์ชัน รวมถึงตัวพารามิเตอร์ของฟังก์ชันจะเป็นตัวแปร local สามารถใช้งานได้ภายในฟังก์ชันที่ประกาศไว้
1.2)Global Variables
- ตัวแปรที่ประกาศไว้ในนอกฟังก์ชันเป็นตัวแปร global สามารถเข้าถึงได้จากฟังก์ชันต่างๆรวมถึง main ได้
- ตัวแปร local มีชื่อซ้ำกับตัวแปร global การแก้ไขค่าในตัวแปร local จะไม่ได้มีผลกระทบกับค่าของตัวแปร global
1.3)Storage Classes 
- นอกจากตัวแปรที่มี ชื่อ ประเภท ค่าข้อมูล แล้ว ภาษา c  ยังกำหนดให้ผู้ใช้สามารถกำหนด Storage Class ให้กับตัวแปร 4 ลักษณะ ผ่านการใช้ auto, register, extern และ static 
- Storage Class 4 ประเภทนี้ แบ่งออกเป็น 2 Storage duration คือ automatic Storage duration และ static Storage duration
- ตัวแปร local เป็นตัวแปรที่อยู่ใน automatic Storage duration โดย ที่ default ดังนั้นใช้ auto จึงไม่เป็นการจำเป็น ซึ่งเราจะไม่ค่อยเห็น auto ปรากฎอยู่ในโค้ดโปรแกรมโดยทั่วไป
1.4)Dynamic Storage Duration
- พื้นที่ข้อมูล Dynamic Storage duration สามารถถูก allocate ขึ้นมาได้ตามความต้องการของโปรแกรมกำลังทำงานอยู่

2.การคอมไพล์แยกส่วน(Separate Compilation)
- การนิยามฟังก์ชันและการเรียกใช้ไม่จำเป็นต้องถูกคอมไพล์ในเวลาเดียวกัน และ สามารถแยกอยู่กันคนละไฟล์ได้ รวมถึง global และการเข้าถึงค่าตัวแปรนั้น

3.การใช้ make 
- makefile จะบรรจุกฎต่างๆ ใช้ในการสร้าง object file หรือ executable file

4.การสร้าง Static Library
- gcc -c func.c

5.การสร้าง Shared(Dynamic)Library
- windows
- MacOSX
- Linux

6.การเรียกใช้ฟังก์ชัน Shared Library ของภาษา c จาก python
- from ctypes import cdll

7.Random Number Generator 
- rand() ฟังก์ชันใน C Standard Library ใช้ในการสร้างเลขสุ่มที่จำนวนเต็มอยู่ระหว่าง 0 และ RAND_MAX ซึ่ง RAND_MAX เป็นค่าคงที่ที่กำหนดไว้ใน <stdlib.h>
- เวลาการเรียกใช้ rand() หลายๆครั้ง ค่าที่ฟังก์ชันนี้ส่งกลับมาจะได้เลขจำนวนเต็มที่แตกต่างออกไป